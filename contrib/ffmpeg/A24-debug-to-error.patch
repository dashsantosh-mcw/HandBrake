From b2e5b4a9f99ade828d9eea615209a2149735a8ee Mon Sep 17 00:00:00 2001
From: Dash Santosh <santdas36@gmail.com>
Date: Wed, 5 Jun 2024 13:55:08 +0530
Subject: [PATCH] debug  to error

---
 libavcodec/decode.c | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/libavcodec/decode.c b/libavcodec/decode.c
index 80a59fc824..b5998279ae 100644
--- a/libavcodec/decode.c
+++ b/libavcodec/decode.c
@@ -312,7 +312,7 @@ static int discard_samples(AVCodecContext *avctx, AVFrame *frame, int64_t *disca
         avci->skip_samples = AV_RL32(side->data);
         avci->skip_samples = FFMAX(0, avci->skip_samples);
         discard_padding = AV_RL32(side->data + 4);
-        av_log(avctx, AV_LOG_DEBUG, "skip %d / discard %d samples due to side data\n",
+        av_log(avctx, AV_LOG_ERROR, "skip %d / discard %d samples due to side data\n",
                avci->skip_samples, (int)discard_padding);
         skip_reason = AV_RL8(side->data + 8);
         discard_reason = AV_RL8(side->data + 9);
@@ -342,7 +342,7 @@ static int discard_samples(AVCodecContext *avctx, AVFrame *frame, int64_t *disca
         if (frame->nb_samples <= avci->skip_samples){
             *discarded_samples += frame->nb_samples;
             avci->skip_samples -= frame->nb_samples;
-            av_log(avctx, AV_LOG_DEBUG, "skip whole frame, skip left: %d\n",
+            av_log(avctx, AV_LOG_ERROR, "skip whole frame, skip left: %d\n",
                    avci->skip_samples);
             return AVERROR(EAGAIN);
         } else {
@@ -361,7 +361,7 @@ static int discard_samples(AVCodecContext *avctx, AVFrame *frame, int64_t *disca
             } else
                 av_log(avctx, AV_LOG_WARNING, "Could not update timestamps for skipped samples.\n");
 
-            av_log(avctx, AV_LOG_DEBUG, "skip %d/%d samples\n",
+            av_log(avctx, AV_LOG_ERROR, "skip %d/%d samples\n",
                    avci->skip_samples, frame->nb_samples);
             *discarded_samples += avci->skip_samples;
             frame->nb_samples -= avci->skip_samples;
@@ -382,7 +382,7 @@ static int discard_samples(AVCodecContext *avctx, AVFrame *frame, int64_t *disca
             } else
                 av_log(avctx, AV_LOG_WARNING, "Could not update timestamps for discarded samples.\n");
 
-            av_log(avctx, AV_LOG_DEBUG, "discard %d/%d samples\n",
+            av_log(avctx, AV_LOG_ERROR, "discard %d/%d samples\n",
                    (int)discard_padding, frame->nb_samples);
             frame->nb_samples -= discard_padding;
         }
@@ -612,7 +612,7 @@ static int decode_simple_receive_frame(AVCodecContext *avctx, AVFrame *frame)
         if (discarded_samples > avctx->max_samples)
             return AVERROR(EAGAIN);
         ret = decode_simple_internal(avctx, frame, &discarded_samples);
-        av_log(avctx, AV_LOG_DEBUG, "discarded_samples: %d\n", discarded_samples);
+        av_log(avctx, AV_LOG_ERROR, "discarded_samples: %d\n", discarded_samples);
         av_log(avctx, AV_LOG_ERROR, "decode_simple_receive_frame cpm%d: dpm:%d ret:%d\n", frame->coded_picture_number, frame->display_picture_number, ret);
         if (ret < 0)
             return ret;
@@ -712,7 +712,7 @@ FF_ENABLE_DEPRECATION_WARNINGS
     /* free the per-frame decode data */
     av_buffer_unref(&frame->private_ref);
 
-    av_log(avctx, AV_LOG_DEBUG, "decode_receive_frame ret:%d\n", ret);
+    av_log(avctx, AV_LOG_ERROR, "decode_receive_frame ret:%d\n", ret);
     return ret;
 }
 
@@ -757,8 +757,8 @@ int attribute_align_arg avcodec_send_packet(AVCodecContext *avctx, const AVPacke
 
     if (!avci->buffer_frame->buf[0] && !dc->draining_started) {
         ret = decode_receive_frame_internal(avctx, avci->buffer_frame);
-        av_log(avctx, AV_LOG_DEBUG, "avcodec_send_packet ret:%d\n", ret);
-        av_log(avctx, AV_LOG_DEBUG, "avc condition: %d\n", ret < 0 && ret != AVERROR(EAGAIN) && ret != AVERROR_EOF);
+        av_log(avctx, AV_LOG_ERROR, "avcodec_send_packet ret:%d\n", ret);
+        av_log(avctx, AV_LOG_ERROR, "avc condition: %d\n", ret < 0 && ret != AVERROR(EAGAIN) && ret != AVERROR_EOF);
         if (ret < 0 && ret != AVERROR(EAGAIN) && ret != AVERROR_EOF)
         {
             av_log(avctx, AV_LOG_ERROR, "decode_receive_frame_internal() failed: %d\n", ret);
@@ -1334,7 +1334,7 @@ int ff_get_format(AVCodecContext *avctx, const enum AVPixelFormat *fmt)
             ret = AV_PIX_FMT_NONE;
             break;
         }
-        av_log(avctx, AV_LOG_DEBUG, "Format %s chosen by get_format().\n",
+        av_log(avctx, AV_LOG_ERROR, "Format %s chosen by get_format().\n",
                desc->name);
 
         for (i = 0; i < n; i++) {
@@ -1401,7 +1401,7 @@ int ff_get_format(AVCodecContext *avctx, const enum AVPixelFormat *fmt)
             goto try_again;
         }
         if (hw_config->hwaccel) {
-            av_log(avctx, AV_LOG_DEBUG, "Format %s requires hwaccel "
+            av_log(avctx, AV_LOG_ERROR, "Format %s requires hwaccel "
                    "initialisation.\n", desc->name);
             err = hwaccel_init(avctx, hw_config->hwaccel);
             if (err < 0)
@@ -1411,7 +1411,7 @@ int ff_get_format(AVCodecContext *avctx, const enum AVPixelFormat *fmt)
         break;
 
     try_again:
-        av_log(avctx, AV_LOG_DEBUG, "Format %s not usable, retrying "
+        av_log(avctx, AV_LOG_ERROR, "Format %s not usable, retrying "
                "get_format() without it.\n", desc->name);
         for (i = 0; i < n; i++) {
             if (choices[i] == user_choice)
-- 
2.43.0.windows.1

